第二章　仮想環境の構築

１、仮想環境
　1台のPC内に、あたかも別のPCが入っているような環境をバーチャルで（仮想的に）作ること。
　構築や削除が比較的行いやすい。

♦️VirtualBoxをインストールする
　「VirtualBox（バーチャルボックス）」をインストールして、PC上に仮想環境を構築します。

♦️Vagrantをインストールする
　仮想マシンを管理するツールで、Windows、Mac OS X、Linuxで動作します。
　Vagrant自体には仮想化する機能はないため、仮想ソフトの操作をVirtualBoxで代行させています。

　Railsには「CoC（設定より規約）」という設計思想があります（後述）。
　規約に従うことで誰でも似たようなコードを書けるので、メンテナンスしやすくなります

♦️品質を維持できる
 Ruby on Railsは、オープンソースのWebアプリケーションフレームワークです。
「オープンソース」とは、ソースコードが無償で公開されていて、誰でも自由に閲覧したり編集を行える状態のことです。
 世界中の大勢の人によって利用実績が積み上げられ、今も改善され続けています。
 最善の状態で品質を維持しやすいのも大きな特徴です。

----------------------------------------------------------------------------------
２、vagrant への接続・ログアウト方法
♦️vagrantへ接続
$ vagrant ssh

♦️鍵の確認
$ ssh-add -l
SHA256:JzjGP5+YihVI5ZVR3d0v.....のように出力されていれば成功しています。

※ error fetching identities for protocol 1: agent refused operation
こちらはSSHのプロトコルバージョンによるものです。SSHにはプロトコル1とプロトコル2が存在します。
現在はプロトコル2を使用して接続ができるので無視して問題ありません。

※ The agent has no identities.
この様に出力された場合は失敗していますのでMac側でssh-agentの起動から、やり直してください。
vagrantからログアウトするにはターミナルで以下のように入力します。

♦️vagrantからログアウトする
$ exit
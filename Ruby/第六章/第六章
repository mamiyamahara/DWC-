第六章　データ型を学ぼう

１、数値
 「1」「200」「-100」「0」などの整数、「3.14」などの小数のことです。

 [メソッド]

 +（足し算）
 -（引き算）
 /（割り算）
 *（掛け算）
 %（割り算の余りの計算）

puts 100
# 出力結果=>100
puts 100 + 5
# 出力結果=>105

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
２、文字列
　シングルクォートやダブルクォートで囲むことで、文字列として出力されます。

　[特徴]
♦️文字列の中に#{変数}と記述することによって、｛｝内の変数の値を展開できます。
♦️+を使うと、文字列の連結も可能になる。

puts "Rubyを学習"
# 出力結果=>Rubyを学習
name = "鈴木さん"
puts "Hello" + name
# 出力結果=>Hello鈴木さん
puts "こんにちは#{name}"
# 出力結果=>こんにちは鈴木さん

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
３、配列
　配列を使うと、複数のデータをまとめて保存できます。

　[特徴]
♦️配列の各要素には、どのようなオブジェクトでも代入できる
♦️同じ配列の要素に異なった種類のオブジェクトを代入することも可能
♦️データ型は問われません。文字列でも数値でも代入できます。
♦️先頭から0、1、2というように「インデックス番号」が割り振られます。
♦️データを呼び出すには、配列名[インデックス番号]で記述します。
♦️※注意：ここで使用する括弧は、入力も出力も [] （角括弧）です。

names = ["Perl", "Ruby", "Python", "Swift"]
puts names[1]
 
# 出力結果=>Ruby

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
４、ハッシュ
　キーと値をセットで保存できるデータの集合。

[特徴]
♦️任意の値（キー）を割り振ることができます。
♦️ハッシュからデータを呼び出すには、出力したい値に対応するキーを指定します。
♦️※注意：ここで使用する括弧は、入力は {} （波括弧）、出力は [] （角括弧）です。

tall = {"太郎"=>185, "二郎"=>170, "花子"=>150}
puts tall["太郎"]
# 出力結果=>185

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
５、シンボル
　シングルクォートやダブルクォートの代わりに：コロンを使用することで、文字列と同様に扱うことができる。

tall = {:太郎=>185, :二郎=>170, :花子=>150}
puts tall[:花子]
# 出力結果=>150 












